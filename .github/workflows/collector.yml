name: collect

on:
 # schedule:
  #  - cron: "*/15 * * * *"   # Her 15 dakikada bir
  workflow_dispatch:        # Manuel tetikleme

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # data/ altını commit/push edebilmek için

    # Secrets'ı env'e bağla (expression değil, env)
    env:
      DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
      GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fail fast if secrets are missing
        run: |
          if [ -z "$GOOGLE_SERVICE_ACCOUNT_JSON" ] || [ -z "$DRIVE_FOLDER_ID" ]; then
            echo "::error::Missing secrets. Please set DRIVE_FOLDER_ID and GOOGLE_SERVICE_ACCOUNT_JSON in Repo → Settings → Secrets and variables → Actions."
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write service account file
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT_JSON" > service_account.json
          python - <<'PY'
          import json,sys
          try:
              json.load(open("service_account.json","r",encoding="utf-8"))
          except Exception as e:
              sys.exit(f"Service account JSON invalid: {e}")
          print("Service account JSON OK")
          PY

      - name: Run collector (Drive → data/raw + data/normalized)
        run: |
          # Script yolun repoda farklıysa bu hattı değiştir
          python ci/collector_gdrive_ci.py --folder-id "$DRIVE_FOLDER_ID"

      - name: Show normalized files (diagnostic)
        if: always()
        run: |
          echo "::group::normalized listing"
          ls -la data/normalized || true
          echo "::endgroup::"
          echo "::group::peek first rows"
          for f in data/normalized/*.csv; do
            echo "==== $f ===="
            head -n 20 "$f" || true
          done
          echo "::endgroup::"

      - name: Commit & push data changes
        run: |
          git config user.name  "data-bot"
          git config user.email "data-bot@users.noreply.github.com"
          git add -A data/
          if git diff --cached --quiet; then
            echo "No data changes to commit."
          else
            git commit -m "Mirror & normalize Drive to data/ [skip ci]"
            git push
          fi
