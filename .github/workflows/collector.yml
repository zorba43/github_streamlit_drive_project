name: collect

on:
  # Her 15 dakikada bir çalıştır
  schedule:
    - cron: "*/15 * * * *"
  # Manuel çalıştırma
  workflow_dispatch:
  # Workflow dosyası veya CI dosyaları değişince de koşsun (opsiyonel)
  push:
    paths:
      - ".github/workflows/collector.yml"
      - "ci/**"

# Aynı anda tek job çalışsın, üst üste binmesin
concurrency:
  group: collect
  cancel-in-progress: true

jobs:
  collect:
    # Secrets doğru tanımlı değilse job hiç başlamasın
    if: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON != '' && secrets.DRIVE_FOLDER_ID != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write   # veri değişikliklerini push edebilmek için

    steps:
      - name: Checkout repo
      # v4 kullanılabilir (GitHub resmi)
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write service account file
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' > service_account.json
          # Basit doğrulama: JSON geçerli mi
          python - <<'PY'
          import json,sys
          try:
              json.load(open("service_account.json","r",encoding="utf-8"))
          except Exception as e:
              sys.exit(f"Service account JSON invalid: {e}")
          print("Service account JSON OK")
          PY

      - name: Run collector (Drive → data/raw + data/normalized)
        env:
          DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
        run: |
          # Collector script'in senin repodaki yerleşimine göre
          # yolu değiştirme ihtiyacı olabilir.
          python ci/collector_gdrive_ci.py --folder-id "$DRIVE_FOLDER_ID"

      - name: Show normalized files (diagnostic)
        if: always()
        run: |
          echo "::group::normalized listing"
          ls -la data/normalized || true
          echo "::endgroup::"
          echo "::group::peek first rows"
          for f in data/normalized/*.csv; do
            echo "==== $f ===="
            head -n 20 "$f" || true
          done
          echo "::endgroup::"

      - name: Commit & push data changes
        run: |
          git config user.name  "data-bot"
          git config user.email "data-bot@users.noreply.github.com"
          git add -A data/
          if git diff --cached --quiet; then
            echo "No data changes to commit."
          else
            git commit -m "Mirror & normalize Drive to data/ [skip ci]"
            git push
          fi
